# Generated by Django 3.2.4 on 2021-07-20 05:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coursename', models.CharField(max_length=40)),
                ('attendedclasses', models.IntegerField()),
                ('totalclasses', models.IntegerField()),
                ('attendance', models.FloatField()),
                ('classestoattend', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=40)),
                ('feducation', models.CharField(max_length=40)),
                ('fdep', models.CharField(max_length=40)),
                ('femail', models.EmailField(max_length=30)),
                ('faddress', models.CharField(max_length=40)),
                ('fdateofjoin', models.DateField()),
                ('fexp', models.CharField(max_length=40)),
                ('fimg', models.ImageField(default='fa1.jpg', upload_to='StaffImages/')),
            ],
        ),
        migrations.CreateModel(
            name='Lfaculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lfid', models.CharField(max_length=10)),
                ('isfaculty', models.CharField(choices=[('ST', 'Student'), ('FA', 'Faculty'), ('Df', 'Select')], default='Df', max_length=12)),
                ('leavefac', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='LStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lstuid', models.CharField(max_length=10)),
                ('isstudent', models.CharField(choices=[('ST', 'Student'), ('FA', 'Faculty'), ('Df', 'Select')], default='Df', max_length=12)),
                ('leavestu', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sname', models.CharField(max_length=40)),
                ('sid', models.CharField(max_length=40)),
                ('semail', models.EmailField(max_length=40)),
                ('scourse', models.CharField(max_length=40)),
                ('gender', models.CharField(choices=[('m', 'Male'), ('f', 'Female'), ('Df', 'Select Gender Type')], default='Df', max_length=12)),
                ('saddress', models.CharField(max_length=40)),
                ('simg', models.ImageField(default='rgukt.jpg', upload_to='StudentImages/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uname', models.CharField(max_length=40)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
